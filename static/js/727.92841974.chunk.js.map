{"version":3,"file":"static/js/727.92841974.chunk.js","mappings":"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","sources":["const/api.js","views/pages/Loading.js","views/pages/Statistique/GlobalStatistique.js"],"sourcesContent":["export default function api(link) {\r\n  return `${process.env.REACT_APP_BACKEND_HOST}/${link}`;\r\n}\r\n","import React from \"react\";\r\nimport { CSpinner } from \"@coreui/react\";\r\nclass Loading extends React.Component {\r\n  render() {\r\n    return <CSpinner />;\r\n  }\r\n}\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardTitle,\r\n  CInputGroup,\r\n  CFormInput,\r\n  CInputGroupText,\r\n  CRow,\r\n  CButton,\r\n  CCol,\r\n} from \"@coreui/react\";\r\nimport api from \"../../../const/api\";\r\nimport Loading from \"../Loading\";\r\nexport default class GlobalStatistique extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      dataMonthEntry: [1423, 2874],\r\n      dataMonthExpense: [9172, 6821],\r\n      dataMonthBenefit: [3800, 2891],\r\n      labels: [\"Analamanga\", \"Vakinakaratra\"],\r\n      firstDate: \"\",\r\n      secondDate: \"\",\r\n      totalMonth: [],\r\n      typeFilter: 0,\r\n      tenders: 0,\r\n      soumissions: 0,\r\n      reussite: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getTenderCount();\r\n    this.getSoumissionCount();\r\n    this.getReussiteCount();\r\n  }\r\n\r\n  getTenderCount() {\r\n    let wheres = [];\r\n    if (this.state.firstDate !== \"\")\r\n      wheres.push(`date1=${this.state.firstDate}`);\r\n    if (this.state.secondDate !== \"\")\r\n      wheres.push(`date2=${this.state.secondDate}`);\r\n    wheres = wheres.join('&');\r\n    if(wheres!=='') wheres=`?${wheres}`;\r\n    this.setLoading(true);\r\n    fetch(api(`tenders/count${wheres}`), { method: \"GET\" }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json().then((data) => {\r\n          this.setState({\r\n            tenders: data.count,\r\n          });\r\n          this.setLoading(false);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getSoumissionCount() {\r\n    let wheres = [];\r\n    if (this.state.firstDate !== \"\")\r\n      wheres.push(`date1=${this.state.firstDate}`);\r\n    if (this.state.secondDate !== \"\")\r\n      wheres.push(`date2=${this.state.secondDate}`);\r\n    wheres = wheres.join('&');\r\n    if(wheres!=='') wheres=`?${wheres}`;\r\n    this.setLoading(true);\r\n    fetch(api(`soumissions/count${wheres}`), { method: \"GET\" }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json().then((data) => {\r\n          this.setState({\r\n            soumissions: data.count,\r\n          });\r\n          this.setLoading(false);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getReussiteCount() {\r\n    let wheres = [];\r\n    if (this.state.firstDate !== \"\")\r\n      wheres.push(`date1=${this.state.firstDate}`);\r\n    if (this.state.secondDate !== \"\")\r\n      wheres.push(`date2=${this.state.secondDate}`);\r\n    wheres = wheres.join('&');\r\n    if(wheres!=='') wheres=`?${wheres}`;\r\n    this.setLoading(true);\r\n    fetch(api(`soumissions/reussite${wheres}`), { method: \"GET\" }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json().then((data) => {\r\n          this.setState({\r\n            reussite: data.count,\r\n          });\r\n          this.setLoading(false);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  filter = () => {\r\n    this.getTenderCount();\r\n    this.getSoumissionCount();\r\n  }\r\n\r\n  setTypeFilter = (e) => {\r\n    this.setState({\r\n      typeFilter: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { loading, firstDate, secondDate } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"mb-3 bg-light min-vh-50 d-flex flex-row\">\r\n          <div style={{ width: \"100%\" }}>\r\n            <CCard>\r\n              <CCardHeader>Filtres</CCardHeader>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupText component=\"label\" htmlFor=\"debut\">\r\n                        Début\r\n                      </CInputGroupText>\r\n                      <CFormInput\r\n                        id=\"debut\"\r\n                        type=\"date\"\r\n                        placeholder=\"Debut\"\r\n                        autoComplete=\"date\"\r\n                        value={firstDate}\r\n                        onChange={this.setFirstDate}\r\n                      />\r\n                    </CInputGroup>\r\n                  </CCol>\r\n                  <CCol>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupText component=\"label\" htmlFor=\"fin\">\r\n                        Fin\r\n                      </CInputGroupText>\r\n                      <CFormInput\r\n                        id=\"fin\"\r\n                        type=\"date\"\r\n                        placeholder=\"Fin\"\r\n                        autoComplete=\"date\"\r\n                        value={secondDate}\r\n                        onChange={this.setSeconDate}\r\n                      />\r\n                    </CInputGroup>\r\n                  </CCol>\r\n                  {/* <CCol>\r\n                    <CInputGroup style={{ height: \"30px\" }}>\r\n                      <CInputGroupText component=\"label\" htmlFor=\"offerType\">\r\n                        Type\r\n                      </CInputGroupText>\r\n                      <CFormSelect\r\n                        id=\"offerType\"\r\n                        onChange={this.setTypeFilter}\r\n                        value={typeFilter}\r\n                        required\r\n                      >\r\n                        <option value={0}>Tous</option>\r\n                        <option value={1}>Ouvert</option>\r\n                        <option value={2}>Restreint</option>\r\n                        <option value={3}>Préséléction</option>\r\n                      </CFormSelect>\r\n                    </CInputGroup>\r\n                  </CCol>\r\n                  <CCol>\r\n                    <CInputGroup style={{ width: \"250px\", height: \"30px\" }}>\r\n                      <CInputGroupText component=\"label\" htmlFor=\"offerType\">\r\n                        Région\r\n                      </CInputGroupText>\r\n                      <CFormSelect\r\n                        id=\"offerType\"\r\n                        onChange={this.setTypeFilter}\r\n                        value={typeFilter}\r\n                        required\r\n                      >\r\n                        <option value={0}>Tous</option>\r\n                        <option value={1}>Analamanga</option>\r\n                        <option value={2}>Vakinakaratra</option>\r\n                        <option value={3}>Alaotra</option>\r\n                      </CFormSelect>\r\n                    </CInputGroup>\r\n                  </CCol> */}\r\n                  <CCol>\r\n                    <CButton style={{ width: \"100%\" }} onClick={this.filter}>Afficher</CButton>\r\n                  </CCol>\r\n                </CRow>\r\n                {/* <CRow className=\"align-items-end\">\r\n                </CRow> */}\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-light min-vh-50 d-flex flex-row align-items-center\">\r\n          <div className=\"statistique-card\">\r\n            <CCard>\r\n              <CCardHeader>Appels d'offres</CCardHeader>\r\n              <CCardBody>\r\n                <CCardTitle className=\"stat-title\">\r\n                  {this.state.tenders}\r\n                </CCardTitle>\r\n              </CCardBody>\r\n            </CCard>\r\n            <CCard>\r\n              <CCardHeader>Soumissions</CCardHeader>\r\n              <CCardBody>\r\n                <CCardTitle className=\"stat-title\">\r\n                  {this.state.soumissions}\r\n                </CCardTitle>\r\n              </CCardBody>\r\n            </CCard>\r\n            <CCard>\r\n              <CCardHeader>Taux de réussite</CCardHeader>\r\n              <CCardBody>\r\n                <CCardTitle className=\"stat-title\">{Number(this.state.reussite).toPrecision(2)}%</CCardTitle>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n        <div>\r\n          {/* <CCard>\r\n            <CCardHeader>Nombre de soummissions</CCardHeader>\r\n            <CCardBody>\r\n              <CChart\r\n                type=\"bar\"\r\n                data={{\r\n                  labels: labels,\r\n                  datasets: [\r\n                    {\r\n                      label: \"Janvier\",\r\n                      backgroundColor: \"#198754\",\r\n                      borderColor: \"#198754\",\r\n                      borderWidth: 1,\r\n\r\n                      data: dataMonthEntry,\r\n                    },\r\n                    {\r\n                      label: \"Fevrier\",\r\n                      backgroundColor: \"#198754\",\r\n                      borderColor: \"#198754\",\r\n                      borderWidth: 1,\r\n\r\n                      data: dataMonthExpense,\r\n                    },\r\n                    {\r\n                      label: \"Mars\",\r\n                      backgroundColor: \"#198754\",\r\n                      borderColor: \"#198754\",\r\n                      borderWidth: 1,\r\n                      data: dataMonthBenefit,\r\n                    },\r\n                  ],\r\n                }}\r\n                labels=\"months\"\r\n              />\r\n            </CCardBody>\r\n          </CCard> */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  setLoading(state) {\r\n    this.setState({\r\n      loading: state,\r\n    });\r\n  }\r\n\r\n  setFirstDate = (e) => {\r\n    this.setState({\r\n      firstDate: e.target.value,\r\n    });\r\n  };\r\n  setSeconDate = (e) => {\r\n    this.setState({\r\n      secondDate: e.target.value,\r\n    });\r\n  };\r\n}\r\n"],"names":["api","link","process","Loading","React","GlobalStatistique","props","filter","getTenderCount","getSoumissionCount","setTypeFilter","e","setState","typeFilter","target","value","setFirstDate","firstDate","setSeconDate","secondDate","state","loading","dataMonthEntry","dataMonthExpense","dataMonthBenefit","labels","totalMonth","tenders","soumissions","reussite","this","getReussiteCount","wheres","push","join","setLoading","fetch","method","then","res","ok","json","data","count","className","style","width","component","htmlFor","id","type","placeholder","autoComplete","onChange","onClick","Number","toPrecision"],"sourceRoot":""}