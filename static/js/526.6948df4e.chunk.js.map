{"version":3,"file":"static/js/526.6948df4e.chunk.js","mappings":"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","sources":["const/api.js","views/pages/user/listUser.js","../node_modules/@coreui/icons/js/free/cil-lock-locked.js"],"sourcesContent":["export default function api(link) {\r\n  return `${process.env.REACT_APP_BACKEND_HOST}/${link}`;\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CButton,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CFormSelect,\r\n  CInputGroupText,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { cilLockLocked } from \"@coreui/icons\";\r\nimport api from \"../../../const/api\";\r\n\r\nexport default class ListUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formModalState: false,\r\n      deleteModalState: false,\r\n      loading: true,\r\n      users: null,\r\n      roles: null,\r\n      pagination: [],\r\n      totalPage: 0,\r\n      pageList: 1,\r\n      pageNumber: 10,\r\n      error: \"\",\r\n      activated: -1,\r\n      name: \"\",\r\n      id: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserData();\r\n    const roleTemp = [\r\n      {\r\n        id: 1,\r\n        entitled: \"Role1\",\r\n        description: \"Accès limité\",\r\n        access: [\"Liste utilisateur\", \"Statistique apple d'offre\"],\r\n      },\r\n      {\r\n        id: 2,\r\n        entitled: \"Role2\",\r\n        description: \"Accès complet\",\r\n        access: [\"Tous\"],\r\n      },\r\n    ];\r\n\r\n    this.setState({ roles: roleTemp });\r\n  }\r\n\r\n  pagination = (totalPages) => {\r\n    let page = [];\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      page.push(i);\r\n    }\r\n    this.setState({ pagination: page });\r\n  };\r\n\r\n  getUserData = (nom = null, status = -1) => {\r\n    let wheres = [`valide=1`];\r\n    if (nom && nom !== \"\") wheres.push(`nom=${nom}`);\r\n    if (status && status >= 0) wheres.push(`active=${status}`);\r\n    wheres = wheres.join(\"&\");\r\n    if (wheres !== \"\") wheres = `?${wheres}`;\r\n    this.setLoading(true);\r\n    fetch(api(`users${wheres}`), { method: \"GET\" }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json().then((data) => {\r\n          this.setState({\r\n            users: data,\r\n          });\r\n          this.setLoading(false);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  activatedUser(id) {\r\n    fetch(api(`users/activate/${id}`), {\r\n      method: \"PUT\",\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        this.getUserData();\r\n        this.setDeleteModalState(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  deactivatedUser(id) {\r\n    fetch(api(`users/deactivate/${id}`), {\r\n      method: \"PUT\",\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        this.getUserData();\r\n        this.setDeleteModalState(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  userActivation(index) {\r\n    this.setId(index);\r\n    this.setDeleteModalState(true);\r\n  }\r\n\r\n  cancelFormModal = () => {\r\n    this.setFormModalState(false);\r\n    this.clearFields();\r\n    this.setError();\r\n  };\r\n\r\n  addUser() {\r\n    this.props.history.push(\"/register\");\r\n  }\r\n  accessAuthorization(id) {\r\n    this.props.history.push(\"/user/accessAuthorization/\" + id);\r\n  }\r\n  userUpdatePassword(id) {\r\n    this.props.history.push(\"/user/update/password/\" + id);\r\n  }\r\n\r\n  search() {\r\n    const { activated, name } = this.state;\r\n    this.getUserData(name, activated);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      users,\r\n      deleteModalState,\r\n      id,\r\n    } = this.state;\r\n    // if (loading) {\r\n    //   return <Loading />;\r\n    // }\r\n    return (\r\n      <>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md={9} lg={9} xl={6}>\r\n            <CCard className=\"mx-4\">\r\n              <div style={{ overflowX: \"auto\" }}>\r\n                <CForm\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                  }}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexWrap: \"nowrap\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <CInputGroup>\r\n                    <CInputGroupText\r\n                      component=\"label\"\r\n                      htmlFor=\"inputGroupSelect01\"\r\n                    >\r\n                      Nom\r\n                    </CInputGroupText>\r\n                    <CFormInput\r\n                      id=\"inputGroupSelect01\"\r\n                      onChange={this.setName}\r\n                    ></CFormInput>\r\n                  </CInputGroup>\r\n                  <CInputGroup>\r\n                    <CInputGroupText\r\n                      component=\"label\"\r\n                      htmlFor=\"inputGroupSelect01\"\r\n                    >\r\n                      Status\r\n                    </CInputGroupText>\r\n                    <CFormSelect\r\n                      id=\"inputGroupSelect01\"\r\n                      onChange={this.setActivation}\r\n                      value={this.state.activated}\r\n                    >\r\n                      <option value={-1}>Tous</option>\r\n                      <option value={1}>Activé</option>\r\n                      <option value={0}>Désactivé</option>\r\n                    </CFormSelect>\r\n                  </CInputGroup>\r\n                  <div className=\"d-grid\">\r\n                    <CButton\r\n                      color=\"success\"\r\n                      type=\"submit\"\r\n                      onClick={() => this.search()}\r\n                    >\r\n                      voir\r\n                    </CButton>\r\n                  </div>\r\n                </CForm>\r\n              </div>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow>\r\n          <CCol xs={12}>\r\n            <CCard className=\"mb-4\">\r\n              <CCardBody>\r\n                <div style={{ overflowX: \"auto\" }}>\r\n                  <CTable>\r\n                    <CTableHead>\r\n                      <CTableRow>\r\n                        <CTableHeaderCell scope=\"col\">Nom </CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Prénom</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Email</CTableHeaderCell>\r\n                        <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\r\n                      </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                      {users &&\r\n                        users.map((user, index) => (\r\n                          <CTableRow key={user.id}>\r\n                            <CTableDataCell>{user.NOM}</CTableDataCell>\r\n                            <CTableDataCell>{user.PRENOM}</CTableDataCell>\r\n                            <CTableDataCell>{user.EMAIL}</CTableDataCell>\r\n                            {user.ACTIVE === 0 ? (\r\n                              <CTableDataCell style={{ color: \"red\" }}>\r\n                                Désactivé\r\n                              </CTableDataCell>\r\n                            ) : (\r\n                              <CTableDataCell style={{ color: \"green\" }}>\r\n                                Activé\r\n                              </CTableDataCell>\r\n                            )}\r\n\r\n                            {/* <CTableDataCell>\r\n                              <CButton\r\n                                color={\"light\"}\r\n                                onClick={() =>\r\n                                  this.accessAuthorization(user.id)\r\n                                }\r\n                              >\r\n                                Autorisations d'accès <CIcon icon={cilPencil} />\r\n                              </CButton>\r\n                            </CTableDataCell> */}\r\n                            <CTableDataCell>\r\n                              <CButton\r\n                                color={\"danger\"}\r\n                                onClick={() => this.userActivation(index)}\r\n                              >\r\n                                Activation <CIcon icon={cilLockLocked} />\r\n                              </CButton>\r\n                            </CTableDataCell>\r\n                          </CTableRow>\r\n                        ))}\r\n                    </CTableBody>\r\n                  </CTable>\r\n                </div>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n        <CModal\r\n          alignment=\"center\"\r\n          visible={deleteModalState}\r\n          onClose={() => this.setDeleteModalState(false)}\r\n        >\r\n          <CModalHeader>\r\n            <CModalTitle>Activer ou Désactiver</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <p>\r\n              Voulez-vous activer ou désactiver{\" \"}\r\n              {users &&\r\n                users.length > 0 &&\r\n                id < users.length &&\r\n                `${users[id].NOM} ${users[id].PRENOM}`}\r\n              ?\r\n            </p>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton\r\n              color=\"secondary\"\r\n              onClick={() => this.setDeleteModalState(false)}\r\n            >\r\n              Annuler\r\n            </CButton>\r\n            <CButton color=\"danger\" onClick={() => this.deactivatedUser(this.state.users[this.state.id].ID)}>\r\n              Désactiver\r\n            </CButton>\r\n            <CButton color=\"success\" onClick={() => this.activatedUser(this.state.users[this.state.id].ID)}>\r\n              Activer\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n      </>\r\n    );\r\n  }\r\n\r\n  setLoading(state) {\r\n    this.setState({\r\n      loading: state,\r\n    });\r\n  }\r\n  setId(id) {\r\n    this.setState({\r\n      id: id,\r\n    });\r\n  }\r\n\r\n  setActivation = (e) => {\r\n    this.setState({\r\n      activated: e.target.value,\r\n    });\r\n  };\r\n\r\n  setRoleId = (e) => {\r\n    this.setState({\r\n      role_id: e.target.value,\r\n    });\r\n  };\r\n\r\n  setName = (e) => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  setDeleteModalState(modal) {\r\n    this.setState({\r\n      deleteModalState: modal,\r\n    });\r\n  }\r\n}\r\n","export const cilLockLocked = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"]"],"names":["api","link","process","ListUser","props","pagination","totalPages","page","i","push","setState","getUserData","nom","status","wheres","join","setLoading","fetch","method","then","res","ok","json","data","users","cancelFormModal","setFormModalState","clearFields","setError","setActivation","e","activated","target","value","setRoleId","role_id","setName","name","state","formModalState","deleteModalState","loading","roles","totalPage","pageList","pageNumber","error","id","this","entitled","description","access","setDeleteModalState","index","setId","history","className","md","lg","xl","style","overflowX","onSubmit","preventDefault","display","flexWrap","alignItems","component","htmlFor","onChange","color","type","onClick","search","xs","scope","map","user","NOM","PRENOM","EMAIL","ACTIVE","userActivation","icon","cilLockLocked","alignment","visible","onClose","length","deactivatedUser","ID","activatedUser","modal","React"],"sourceRoot":""}