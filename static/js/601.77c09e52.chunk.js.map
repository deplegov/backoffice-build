{"version":3,"file":"static/js/601.77c09e52.chunk.js","mappings":"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","sources":["const/api.js","views/pages/Loading.js","views/pages/purchase/listPurchase.js","../node_modules/@coreui/icons/js/free/cil-plus.js","../node_modules/@coreui/icons/js/free/cil-trash.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["export default function api(link) {\r\n  return `${process.env.REACT_APP_BACKEND_HOST}/${link}`;\r\n}\r\n","import React from \"react\";\r\nimport { CSpinner } from \"@coreui/react\";\r\nclass Loading extends React.Component {\r\n  render() {\r\n    return <CSpinner />;\r\n  }\r\n}\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CButton,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CPagination,\r\n  CPaginationItem,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n} from \"@coreui/react\";\r\nimport api from \"../../../const/api\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { cilTrash, cilPlus } from \"@coreui/icons\";\r\nimport moment from \"moment\";\r\nimport Loading from \"../Loading\";\r\n\r\nexport default class ListPurchase extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      purchase: null,\r\n      purchaseDebt: null,\r\n      formModalState: false,\r\n      deleteModalState: false,\r\n      deleteModalStateWithDebt: false,\r\n      purchaseWithDebt: null,\r\n      load: false,\r\n      error: \"\",\r\n      pagination: [],\r\n      role: \"\",\r\n      totalPage: 0,\r\n      pageList: 1,\r\n      pageNumber: 10,\r\n      paginationDebt: [],\r\n      totalPageDebt: 0,\r\n      pageListDebt: 1,\r\n      pageNumberDebt: 10,\r\n      id: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (sessionStorage.getItem(\"user\")) {\r\n      const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n      this.setRole(user.role_id.entitled);\r\n    }\r\n    this.getPurchaseData(1);\r\n    this.getPurchaseWithDebtData(1);\r\n  }\r\n\r\n  cancelFormModal = () => {\r\n    this.setFormModalState(false);\r\n    this.clearFields();\r\n    this.setError();\r\n  };\r\n\r\n  deleteDebtPurchase() {\r\n    this.setLoadButton(true);\r\n    fetch(api(`debtPayment/${this.state.purchaseDebt[this.state.id].id}`), {\r\n      method: \"DELETE\",\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        const tmp = [...this.state.purchaseDebt];\r\n        tmp.splice(this.state.id, 1);\r\n        this.setState({\r\n          purchaseDebt: tmp,\r\n        });\r\n        this.setDeleteModalStateWithDebt(false);\r\n      }\r\n    });\r\n    this.setLoadButton(false);\r\n  }\r\n\r\n  deletePurchase() {\r\n    this.setLoadButton(true);\r\n    fetch(api(`purchase/${this.state.purchase[this.state.id].id}`), {\r\n      method: \"DELETE\",\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        const tmp = [...this.state.purchase];\r\n        tmp.splice(this.state.id, 1);\r\n        this.setState({\r\n          purchase: tmp,\r\n        });\r\n        this.setDeleteModalState(false);\r\n      }\r\n    });\r\n    this.setLoadButton(false);\r\n  }\r\n\r\n  purchaseToDelete(index) {\r\n    this.setId(index);\r\n    this.setDeleteModalState(true);\r\n  }\r\n\r\n  purchaseWithDebtToDelete(index) {\r\n    this.setId(index);\r\n    this.setDeleteModalStateWithDebt(true);\r\n  }\r\n\r\n  pagination = (totalPages) => {\r\n    let page = [];\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      page.push(i);\r\n    }\r\n    this.setState({ pagination: page });\r\n  };\r\n\r\n  getPurchaseData = (page, pageNumber) => {\r\n    this.setLoading(true);\r\n    fetch(api(`purchase/page/${page}`)).then((res) => {\r\n      if (res.ok) {\r\n        return res.json().then((data) => {\r\n          this.setState({\r\n            purchase: data.purchase,\r\n            pageList: page,\r\n            pageNumber: pageNumber,\r\n            totalPage: data.pagination.totalPages,\r\n          });\r\n          this.pagination(data.pagination.totalPages);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  paginationDebt = (totalPages) => {\r\n    let page = [];\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      page.push(i);\r\n    }\r\n    this.setState({ paginationDebt: page });\r\n  };\r\n\r\n  getPurchaseWithDebtData = (page, pageNumber) => {\r\n    this.setLoading(true);\r\n    fetch(api(`purchase/debt/page/${page}`)).then((res) => {\r\n      if (res.ok) {\r\n        return res.json().then((data) => {\r\n          this.setState({\r\n            purchaseDebt: data.purchase,\r\n            pageListDebt: page,\r\n            pageNumberDebt: pageNumber,\r\n            totalPageDebt: data.pagination.totalPages,\r\n          });\r\n          this.paginationDebt(data.pagination.totalPages);\r\n          this.setLoading(false);\r\n        });\r\n      }\r\n      this.setLoading(false);\r\n    });\r\n  };\r\n\r\n  PurchaseDetail(id) {\r\n    this.props.history.push(\"/Purchase/details/\" + id);\r\n  }\r\n\r\n  addPurchase(debt) {\r\n    this.props.history.push(\"/service/purchase/\" + debt);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      id,\r\n      role,\r\n      load,\r\n      deleteModalState,\r\n      deleteModalStateWithDebt,\r\n      purchase,\r\n      pageList,\r\n      pageNumber,\r\n      totalPage,\r\n      pagination,\r\n      purchaseDebt,\r\n      pageListDebt,\r\n      pageNumberDebt,\r\n      totalPageDebt,\r\n      paginationDebt,\r\n    } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <>\r\n        <CRow>\r\n          <CCol xs={12}>\r\n            <CCard className=\"mb-4\">\r\n              <CCardHeader>\r\n                <span className=\"d-grid gap-2 d-md-flex justify-content-between\">\r\n                  <strong>Liste des Achats sans dette</strong>\r\n                  <CButton\r\n                    color={\"primary\"}\r\n                    onClick={() => this.addPurchase(0)}\r\n                  >\r\n                    <CIcon icon={cilPlus} className=\"me-2\" />\r\n                    Ajouter\r\n                  </CButton>\r\n                </span>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <CTable>\r\n                  <CTableHead>\r\n                    <CTableRow>\r\n                      <CTableHeaderCell scope=\"col\">Reçu par</CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">Client</CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">\r\n                        Montant total\r\n                      </CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">Note</CTableHeaderCell>\r\n                    </CTableRow>\r\n                  </CTableHead>\r\n                  <CTableBody>\r\n                    {purchase &&\r\n                      purchase.map((Purchase, index) => (\r\n                        <CTableRow key={index}>\r\n                          <CTableDataCell>\r\n                            {Purchase.received_by.name}{\" \"}\r\n                            {Purchase.received_by.surname}\r\n                          </CTableDataCell>\r\n                          {Purchase.customer_id ? (\r\n                            <CTableDataCell>\r\n                              {Purchase.customer_id.name}{\" \"}\r\n                              {Purchase.customer_id.surname}\r\n                            </CTableDataCell>\r\n                          ) : (\r\n                            <CTableDataCell>Aucun</CTableDataCell>\r\n                          )}\r\n\r\n                          <CTableDataCell>\r\n                            {Purchase.total_amount > 1000 ? (\r\n                              <>{Purchase.total_amount.toLocaleString()} Ar</>\r\n                            ) : (\r\n                              <>{Purchase.total_amount} Ar</>\r\n                            )}\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>\r\n                            {moment(Purchase.purchase_datetime).format(\r\n                              \"YYYY-MM-DD HH:mm:ss\"\r\n                            )}\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>{Purchase.notes}</CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <CButton\r\n                              color={\"light\"}\r\n                              onClick={() => this.PurchaseDetail(Purchase.id)}\r\n                            >\r\n                              Details\r\n                            </CButton>\r\n                          </CTableDataCell>\r\n                          {role === \"Administrateur\" ? (\r\n                            <CTableDataCell>\r\n                              <CButton\r\n                                color={\"danger\"}\r\n                                onClick={() => this.purchaseToDelete(index)}\r\n                              >\r\n                                <CIcon icon={cilTrash} />\r\n                              </CButton>\r\n                            </CTableDataCell>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </CTableRow>\r\n                      ))}\r\n                  </CTableBody>\r\n                </CTable>\r\n                <CPagination aria-label=\"Page navigation example\">\r\n                  <CPaginationItem\r\n                    aria-label=\"Previous\"\r\n                    disabled={pageList === 1}\r\n                    onClick={() =>\r\n                      this.getPurchaseData(pageList - 1, pageNumber)\r\n                    }\r\n                  >\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                  </CPaginationItem>\r\n                  {pagination.map((page, index) => (\r\n                    <CPaginationItem\r\n                      key={index}\r\n                      active={page === pageList}\r\n                      onClick={() => this.getPurchaseData(page, pageNumber)}\r\n                    >\r\n                      {` ${page} `}\r\n                    </CPaginationItem>\r\n                  ))}\r\n                  <CPaginationItem\r\n                    aria-label=\"Next\"\r\n                    disabled={\r\n                      totalPage - pageList === 0 || (purchase && purchase.length === 0)\r\n                    }\r\n                    onClick={() =>\r\n                      this.getPurchaseData(pageList + 1, pageNumber)\r\n                    }\r\n                  >\r\n                    <span aria-hidden=\"true\"> &raquo; </span>\r\n                  </CPaginationItem>\r\n                </CPagination>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n        <CModal\r\n          alignment=\"center\"\r\n          visible={deleteModalState}\r\n          onClose={() => this.setDeleteModalState(false)}\r\n        >\r\n          <CModalHeader>\r\n            <CModalTitle>Supprimer</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <p>\r\n              Voulez vous supprimer{\" \"}\r\n              {purchase &&\r\n                purchase.length > 0 &&\r\n                id < purchase.length &&\r\n                purchase[id].entitled}\r\n              ?\r\n            </p>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton\r\n              color=\"secondary\"\r\n              onClick={() => this.setDeleteModalState(false)}\r\n            >\r\n              Annuler\r\n            </CButton>\r\n            {load ? (\r\n              <CButton color=\"danger\" disabled>\r\n                <Loading></Loading>\r\n              </CButton>\r\n            ) : (\r\n              <CButton color=\"danger\" onClick={() => this.deletePurchase()}>\r\n                Supprimer\r\n              </CButton>\r\n            )}\r\n          </CModalFooter>\r\n        </CModal>\r\n\r\n        <CRow>\r\n          <CCol xs={12}>\r\n            <CCard className=\"mb-4\">\r\n              <CCardHeader>\r\n                <span className=\"d-grid gap-2 d-md-flex justify-content-between\">\r\n                  <strong>Liste des Achats avec dette</strong>\r\n                  <CButton\r\n                    color={\"primary\"}\r\n                    onClick={() => this.addPurchase(1)}\r\n                  >\r\n                    <CIcon icon={cilPlus} className=\"me-2\" />\r\n                    Ajouter\r\n                  </CButton>\r\n                </span>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <CTable>\r\n                  <CTableHead>\r\n                    <CTableRow>\r\n                      <CTableHeaderCell scope=\"col\">Reçu par</CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">Client</CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">\r\n                        Montant total\r\n                      </CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">Note</CTableHeaderCell>\r\n                    </CTableRow>\r\n                  </CTableHead>\r\n                  <CTableBody>\r\n                    {purchaseDebt &&\r\n                      purchaseDebt.map((Purchase, index) => (\r\n                        <CTableRow key={index}>\r\n                          <CTableDataCell>\r\n                            {Purchase.received_by.name}{\" \"}\r\n                            {Purchase.received_by.surname}\r\n                          </CTableDataCell>\r\n                          {Purchase.customer_id ? (\r\n                            <CTableDataCell>\r\n                              {Purchase.customer_id.name}{\" \"}\r\n                              {Purchase.customer_id.surname}\r\n                            </CTableDataCell>\r\n                          ) : (\r\n                            <CTableDataCell>Aucun</CTableDataCell>\r\n                          )}\r\n\r\n                          <CTableDataCell>\r\n                            {Purchase.total_amount > 1000 ? (\r\n                              <>{Purchase.total_amount.toLocaleString()} Ar</>\r\n                            ) : (\r\n                              <>{Purchase.total_amount} Ar</>\r\n                            )}\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>\r\n                            {moment(Purchase.purchase_datetime).format(\r\n                              \"YYYY-MM-DD HH:mm:ss\"\r\n                            )}\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>{Purchase.notes}</CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <CButton\r\n                              color={\"light\"}\r\n                              onClick={() => this.PurchaseDetail(Purchase.id)}\r\n                            >\r\n                              Details\r\n                            </CButton>\r\n                          </CTableDataCell>\r\n                          {role === \"Administrateur\" ? (\r\n                            <CTableDataCell>\r\n                              <CButton\r\n                                color={\"danger\"}\r\n                                onClick={() => this.purchaseWithDebtToDelete(index)}\r\n                              >\r\n                                <CIcon icon={cilTrash} />\r\n                              </CButton>\r\n                            </CTableDataCell>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </CTableRow>\r\n                      ))}\r\n                  </CTableBody>\r\n                </CTable>\r\n                <CPagination aria-label=\"Page navigation example\">\r\n                  <CPaginationItem\r\n                    aria-label=\"Previous\"\r\n                    disabled={pageListDebt === 1}\r\n                    onClick={() =>\r\n                      this.getPurchaseWithDebtData(\r\n                        pageListDebt - 1,\r\n                        pageNumberDebt\r\n                      )\r\n                    }\r\n                  >\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                  </CPaginationItem>\r\n                  {paginationDebt.map((page, index) => (\r\n                    <CPaginationItem\r\n                      key={index}\r\n                      active={page === pageListDebt}\r\n                      onClick={() =>\r\n                        this.getPurchaseWithDebtData(page, pageNumberDebt)\r\n                      }\r\n                    >\r\n                      {` ${page} `}\r\n                    </CPaginationItem>\r\n                  ))}\r\n                  <CPaginationItem\r\n                    aria-label=\"Next\"\r\n                    disabled={\r\n                      totalPageDebt - pageListDebt === 0 ||\r\n                      (purchase && purchase.length === 0)\r\n                    }\r\n                    onClick={() =>\r\n                      this.getPurchaseWithDebtData(\r\n                        pageListDebt + 1,\r\n                        pageNumberDebt\r\n                      )\r\n                    }\r\n                  >\r\n                    <span aria-hidden=\"true\"> &raquo; </span>\r\n                  </CPaginationItem>\r\n                </CPagination>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n        <CModal\r\n          alignment=\"center\"\r\n          visible={deleteModalStateWithDebt}\r\n          onClose={() => this.setDeleteModalStateWithDebt(false)}\r\n        >\r\n          <CModalHeader>\r\n            <CModalTitle>Supprimer</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <p>\r\n              Voulez vous supprimer{\" \"}\r\n              {purchaseDebt &&\r\n                purchaseDebt.length > 0 &&\r\n                id < purchaseDebt.length &&\r\n                purchaseDebt[id].entitled}\r\n              ?\r\n            </p>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton\r\n              color=\"secondary\"\r\n              onClick={() => this.setDeleteModalStateWithDebt(false)}\r\n            >\r\n              Annuler\r\n            </CButton>\r\n            {load ? (\r\n              <CButton color=\"danger\" disabled>\r\n                <Loading></Loading>\r\n              </CButton>\r\n            ) : (\r\n              <CButton color=\"danger\" onClick={() => this.deleteDebtPurchase()}>\r\n                Supprimer\r\n              </CButton>\r\n            )}\r\n          </CModalFooter>\r\n        </CModal>\r\n      </>\r\n    );\r\n  }\r\n\r\n  setLoading(state) {\r\n    this.setState({\r\n      loading: state,\r\n    });\r\n  }\r\n  setLoadButton(state) {\r\n    this.setState({\r\n      load: state,\r\n    });\r\n  }\r\n  setId(id) {\r\n    this.setState({\r\n      id: id,\r\n    });\r\n  }\r\n  setRole(r) {\r\n    this.setState({\r\n      role: r,\r\n    });\r\n  }\r\n  setDeleteModalState(modal) {\r\n    this.setState({\r\n      deleteModalState: modal,\r\n    });\r\n  }\r\n  setDeleteModalStateWithDebt(modal) {\r\n    this.setState({\r\n      deleteModalStateWithDebt: modal,\r\n    });\r\n  }\r\n}\r\n","export const cilPlus = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='440 240 272 240 272 72 240 72 240 240 72 240 72 272 240 272 240 440 272 440 272 272 440 272 440 240' class='ci-primary'/>\"]","export const cilTrash = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M96,472a23.82,23.82,0,0,0,23.579,24H392.421A23.82,23.82,0,0,0,416,472V152H96Zm32-288H384V464H128Z' class='ci-primary'/><rect width='32' height='200' x='168' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='240' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='312' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M328,88V40c0-13.458-9.488-24-21.6-24H205.6C193.488,16,184,26.542,184,40V88H64v32H448V88ZM216,48h80V88H216Z' class='ci-primary'/>\"]","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["api","link","process","Loading","React","ListPurchase","props","cancelFormModal","setFormModalState","clearFields","setError","pagination","totalPages","page","i","push","setState","getPurchaseData","pageNumber","setLoading","fetch","then","res","ok","json","data","purchase","pageList","totalPage","paginationDebt","getPurchaseWithDebtData","purchaseDebt","pageListDebt","pageNumberDebt","totalPageDebt","state","loading","formModalState","deleteModalState","deleteModalStateWithDebt","purchaseWithDebt","load","error","role","id","sessionStorage","getItem","user","JSON","parse","this","setRole","role_id","entitled","setLoadButton","method","tmp","splice","setDeleteModalStateWithDebt","setDeleteModalState","index","setId","history","debt","xs","className","color","onClick","addPurchase","icon","cilPlus","scope","map","Purchase","received_by","name","surname","customer_id","total_amount","toLocaleString","moment","purchase_datetime","format","notes","PurchaseDetail","purchaseToDelete","cilTrash","disabled","active","length","alignment","visible","onClose","deletePurchase","purchaseWithDebtToDelete","deleteDebtPurchase","r","modal","_arrayLikeToArray","arr","len","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","test","TypeError"],"sourceRoot":""}