{"version":3,"file":"static/js/651.53fbbf9c.chunk.js","mappings":"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","sources":["const/api.js","views/pages/Loading.js","views/pages/purchase/purchaseDetail.js"],"sourcesContent":["export default function api(link) {\r\n  return `${process.env.REACT_APP_BACKEND_HOST}/${link}`;\r\n}\r\n","import React from \"react\";\r\nimport { CSpinner } from \"@coreui/react\";\r\nclass Loading extends React.Component {\r\n  render() {\r\n    return <CSpinner />;\r\n  }\r\n}\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport api from \"../../../const/api\";\r\nimport Loading from \"../Loading\";\r\nimport moment from \"moment\";\r\n\r\nexport default class PurchaseDetail extends React.Component {\r\n  constructor(props) {\r\n    const { match } = props;\r\n    super(props);\r\n    this.state = {\r\n      purchase_id: match && match.params && match.params.id,\r\n      loading: true,\r\n      purchaseDetail: null,\r\n      purchase: null,\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPurchaseDetail();\r\n  }\r\n\r\n  getPurchaseDetail() {\r\n    this.setLoading(true);\r\n    fetch(api(`purchaseDetails/${this.state.purchase_id}`)).then((res) => {\r\n      if (res.ok)\r\n        res.json().then((data) => {\r\n          if (data && data.purchaseDetail) {\r\n            this.getPurchase(data.purchaseDetail[0].purchaseId);\r\n            this.setState({\r\n              purchaseDetail: data.purchaseDetail,\r\n              loading: false,\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  getPurchase(id) {\r\n    this.setLoading(true);\r\n    fetch(api(`purchase/${id}`)).then((res) => {\r\n      if (res.ok)\r\n        res.json().then((data) => {\r\n          if (data && data.purchase)\r\n            this.setState({\r\n              purchase: data.purchase,\r\n              loading: false,\r\n            });\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { purchaseDetail, loading, purchase } = this.state;\r\n    const style = {\r\n      borderColor: \"darkslategrey\",\r\n      borderStyle: \"solid\",\r\n      borderWidth: \"1px\",\r\n    };\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <>\r\n        <CRow>\r\n          <CCol xs={12}>\r\n            <CCard className=\"mb-4\">\r\n              <CCardHeader></CCardHeader>\r\n              <CCardBody>\r\n                <div className=\"title\">\r\n                  <h1>Détails de l'achat</h1>\r\n                </div>\r\n                <div className=\"detail-purchase\">\r\n                  {purchase && purchase ? (\r\n                    <div className=\"customer-purchase\">\r\n                      <div className=\"customer-detail\">\r\n                        {purchase.customer_id ? (\r\n                          <>\r\n                            <h5>\r\n                              {purchase.customer_id.name}{\" \"}\r\n                              {purchase.customer_id.surname}\r\n                            </h5>\r\n                            <h5>{purchase.customer_id.address}</h5>\r\n                            <h5>{purchase.customer_id.number_phone}</h5>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <h5>Aucun client</h5>\r\n                            <h5>Aucune adresse</h5>\r\n                            <h5>Aucun contact</h5>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"info-purchase\">\r\n                        <div className=\"div-display\">\r\n                          <div className=\"date-ref-title\">\r\n                            <h5>Achat#</h5>\r\n                            <h5>Date et Heure# </h5>\r\n                          </div>\r\n                          <div className=\"date-ref\">\r\n                            <h5>{purchase.id}</h5>\r\n                            <h5>\r\n                              {moment(purchase.purchase_datetime).format(\r\n                                \"YYYY-MM-DD HH:mm:ss\"\r\n                              )}\r\n                            </h5>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"info-received\">\r\n                          <h5>Reçu par:</h5>\r\n                          <h5>\r\n                            {purchase.received_by.name}{\" \"}\r\n                            {purchase.received_by.surname}\r\n                          </h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div></div>\r\n                  )}\r\n                  {purchase && purchase ? (\r\n                    <div className=\"info\">\r\n                      <div className=\"vendor-detail\">\r\n                        <h5>Vendeur</h5>\r\n                        <div>\r\n                          <h5>Creat'Or Service</h5>\r\n                          <h5>Address</h5>\r\n                          <h5>Madagascar</h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div></div>\r\n                  )}\r\n                </div>\r\n\r\n                <CTable>\r\n                  <CTableHead style={{ backgroundColor: \"grey\", border: \"1\" }}>\r\n                    <CTableRow>\r\n                      <CTableHeaderCell scope=\"col\">Ref</CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">\r\n                        Designation\r\n                      </CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">Quantité</CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">\r\n                        Prix unitaire\r\n                      </CTableHeaderCell>\r\n                      <CTableHeaderCell scope=\"col\">\r\n                        Prix total\r\n                      </CTableHeaderCell>\r\n                    </CTableRow>\r\n                  </CTableHead>\r\n                  <CTableBody>\r\n                    {purchaseDetail &&\r\n                      purchaseDetail.map((detail, index) => (\r\n                        <CTableRow key={index}>\r\n                          <CTableDataCell style={style}>\r\n                            {detail.id}\r\n                          </CTableDataCell>\r\n                          <CTableDataCell style={style}>\r\n                            {detail.entitled}\r\n                          </CTableDataCell>\r\n\r\n                          <CTableDataCell style={style}>\r\n                            {detail.quantity}\r\n                          </CTableDataCell>\r\n\r\n                          <CTableDataCell style={style}>\r\n                            {detail.unitPrice > 1000 ? (\r\n                              <>{detail.unitPrice.toLocaleString()} Ar</>\r\n                            ) : (\r\n                              <>{detail.unitPrice} Ar</>\r\n                            )}\r\n                          </CTableDataCell>\r\n                          <CTableDataCell style={style}>\r\n                            {detail.totalPrice > 1000 ? (\r\n                              <>{detail.totalPrice.toLocaleString()} Ar</>\r\n                            ) : (\r\n                              <>{detail.totalPrice} Ar</>\r\n                            )}\r\n                          </CTableDataCell>\r\n                        </CTableRow>\r\n                      ))}\r\n                  </CTableBody>\r\n                </CTable>\r\n                {purchase && purchase ? (\r\n                  <div className=\"total-div\">\r\n                    {purchaseDetail[0].totalAmountPurchase > 1000 ? (\r\n                      <>\r\n                        <b>\r\n                          Total :\r\n                          {purchaseDetail[0].totalAmountPurchase.toLocaleString()}{\" \"}\r\n                          Ar\r\n                        </b>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <b>\r\n                          Total : {purchaseDetail[0].totalAmountPurchase} {\"\"}Ar\r\n                        </b>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </>\r\n    );\r\n  }\r\n\r\n  setLoading(state) {\r\n    this.setState({\r\n      loading: state,\r\n    });\r\n  }\r\n  setId(id) {\r\n    this.setState({\r\n      id: id,\r\n    });\r\n  }\r\n}\r\n"],"names":["api","link","process","Loading","React","PurchaseDetail","props","match","state","purchase_id","params","id","loading","purchaseDetail","purchase","error","this","getPurchaseDetail","setLoading","fetch","then","res","ok","json","data","getPurchase","purchaseId","setState","style","borderColor","borderStyle","borderWidth","xs","className","customer_id","name","surname","address","number_phone","moment","purchase_datetime","format","received_by","backgroundColor","border","scope","map","detail","index","entitled","quantity","unitPrice","toLocaleString","totalPrice","totalAmountPurchase"],"sourceRoot":""}