{"version":3,"file":"static/js/228.d76206e4.chunk.js","mappings":"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","sources":["const/api.js","views/pages/Loading.js","views/pages/customer/AddCustomer.js"],"sourcesContent":["export default function api(link) {\r\n  return `${process.env.REACT_APP_BACKEND_HOST}/${link}`;\r\n}\r\n","import React from \"react\";\r\nimport { CSpinner } from \"@coreui/react\";\r\nclass Loading extends React.Component {\r\n  render() {\r\n    return <CSpinner />;\r\n  }\r\n}\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n  CFormCheck,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { cilUser } from \"@coreui/icons\";\r\nimport api from \"../../../const/api\";\r\nimport Loading from \"../Loading\";\r\n\r\nexport default class AddCustomer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pending: false,\r\n      name: \"\",\r\n      surname: \"\",\r\n      gender: \"\",\r\n      address: \"\",\r\n      numberPhone: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n      load: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  getError(index) {\r\n    const errors = {\r\n      \"Username already used.\": \"Ce nom d'utilisateur est déjà utilisé.\",\r\n      \"Email address already used.\": \"Cette adresse mail est déjà utilisée.\",\r\n      \"username should not be empty\":\r\n        \" Le champ nom d'utilisateur est obligatoire \",\r\n      \"email should not be empty\": \" Le champ email est obligatoire\",\r\n      \"email must be an email\": \" Email incorrect\",\r\n    };\r\n    return errors[index];\r\n  }\r\n\r\n  addClient() {\r\n    this.setLoad(true);\r\n    this.setPending(true);\r\n    let email = this.state.email;\r\n    if (this.state.email === \"\") {\r\n      email = null;\r\n    }\r\n    fetch(api(\"customer\"), {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        surname: this.state.surname,\r\n        gender: this.state.gender,\r\n        address: this.state.address,\r\n        number_phone: parseInt(this.state.numberPhone),\r\n        email: email,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok)\r\n        res.json().then((data) => {\r\n         // console.log(data.customer);\r\n          this.setMessage(\"Ajout réussi\");\r\n          this.setLoad(false);\r\n          this.props.history.push(\"/Home\");\r\n        });\r\n      else {\r\n        res.json().then((res) => {\r\n          if (res) {\r\n            this.setMessage(res.message + \", la création a échoué\");\r\n            this.setLoad(false);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { message, name, surname, address, numberPhone, email, load } =\r\n      this.state;\r\n    return (\r\n      <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\r\n        <CContainer>\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol md={9} lg={7} xl={6}>\r\n              <CCard className=\"mx-4\">\r\n                <CCardBody className=\"p-4\">\r\n                  <CForm\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault();\r\n                    }}\r\n                  >\r\n                    <h1>Ajout Client</h1>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupText>\r\n                        <CIcon icon={cilUser} />\r\n                      </CInputGroupText>\r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        placeholder=\"Nom\"\r\n                        autoComplete=\"Nom\"\r\n                        value={name}\r\n                        onChange={this.setName}\r\n                      />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupText>\r\n                        <CIcon icon={cilUser} />\r\n                      </CInputGroupText>\r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        placeholder=\"Prénom\"\r\n                        autoComplete=\"Prénom\"\r\n                        value={surname}\r\n                        onChange={this.setSurname}\r\n                      />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupText>\r\n                        <CIcon icon={cilUser} />\r\n                      </CInputGroupText>\r\n                      <CFormInput\r\n                        type=\"text\"\r\n                        placeholder=\"Adresse\"\r\n                        autoComplete=\"Adresse\"\r\n                        value={address}\r\n                        onChange={this.setAddress}\r\n                      />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupText>\r\n                        <CIcon icon={cilUser} />\r\n                      </CInputGroupText>\r\n                      <CFormInput\r\n                        type=\"number\"\r\n                        placeholder=\"Numéro de téléphone\"\r\n                        autoComplete=\"Numéro de téléphone\"\r\n                        value={numberPhone}\r\n                        onChange={this.setNumberPhone}\r\n                      />\r\n                    </CInputGroup>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        alignItems: \"center\",\r\n                        height: \"68px\",\r\n                      }}\r\n                    >\r\n                      <CFormCheck\r\n                        inline\r\n                        type=\"radio\"\r\n                        id=\"Homme\"\r\n                        name=\"gender\"\r\n                        label=\"Homme\"\r\n                        value=\"M\"\r\n                        onChange={this.setGender}\r\n                      />\r\n                      <CFormCheck\r\n                        inline\r\n                        type=\"radio\"\r\n                        id=\"Femme\"\r\n                        name=\"gender\"\r\n                        label=\"Femme\"\r\n                        value=\"F\"\r\n                        onChange={this.setGender}\r\n                      />\r\n                    </div>\r\n\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupText>@</CInputGroupText>\r\n                      <CFormInput\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        autoComplete=\"email\"\r\n                        value={email}\r\n                        onChange={this.setEmail}\r\n                      />\r\n                    </CInputGroup>\r\n                    <div className=\"d-grid\">\r\n                      {load ? (\r\n                        <CButton id=\"aim-color-green\" className=\"px-4\" disabled>\r\n                          <Loading></Loading>\r\n                        </CButton>\r\n                      ) : (\r\n                        <CButton\r\n                          color=\"success\"\r\n                          type=\"submit\"\r\n                          onClick={() => this.addClient()}\r\n                        >\r\n                          Valider\r\n                        </CButton>\r\n                      )}\r\n                      {message}\r\n                    </div>\r\n                  </CForm>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </div>\r\n    );\r\n  }\r\n  setLoad(l) {\r\n    this.setState({\r\n      load: l,\r\n    });\r\n  }\r\n  setPending(state) {\r\n    this.setState({\r\n      pending: state,\r\n    });\r\n  }\r\n  setMessage(m) {\r\n    this.setState({\r\n      message: m,\r\n    });\r\n  }\r\n  setError(message = null) {\r\n    if (message) {\r\n      this.setState({\r\n        error: message,\r\n        message: message,\r\n        hasError: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        message: \"\",\r\n        error: \"\",\r\n        hasError: false,\r\n      });\r\n    }\r\n  }\r\n  setName = (e) => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n  setSurname = (e) => {\r\n    this.setState({\r\n      surname: e.target.value,\r\n    });\r\n  };\r\n  setGender = (e) => {\r\n    this.setState({\r\n      gender: e.target.value,\r\n    });\r\n  };\r\n  setAddress = (e) => {\r\n    this.setState({\r\n      address: e.target.value,\r\n    });\r\n  };\r\n  setNumberPhone = (e) => {\r\n    this.setState({\r\n      numberPhone: e.target.value,\r\n    });\r\n  };\r\n  setEmail = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n}\r\n"],"names":["api","link","process","Loading","React","AddCustomer","props","setName","e","setState","name","target","value","setSurname","surname","setGender","gender","setAddress","address","setNumberPhone","numberPhone","setEmail","email","state","pending","message","load","index","this","setLoad","setPending","fetch","headers","method","body","JSON","stringify","number_phone","parseInt","then","res","ok","json","data","setMessage","history","push","className","md","lg","xl","onSubmit","preventDefault","icon","cilUser","type","placeholder","autoComplete","onChange","style","display","justifyContent","alignItems","height","inline","id","label","disabled","color","onClick","addClient","l","m","error","hasError"],"sourceRoot":""}