{"version":3,"file":"static/js/134.2656c365.chunk.js","mappings":"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","sources":["const/api.js","views/pages/Loading.js","views/pages/user/updateUserPass.js"],"sourcesContent":["export default function api(link) {\r\n  return `${process.env.REACT_APP_BACKEND_HOST}/${link}`;\r\n}\r\n","import React from \"react\";\r\nimport { CSpinner } from \"@coreui/react\";\r\nclass Loading extends React.Component {\r\n  render() {\r\n    return <CSpinner />;\r\n  }\r\n}\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport api from \"../../../const/api\";\r\nimport Loading from \"../Loading\";\r\n\r\nexport default class UpdateUserPass extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { match } = props;\r\n    this.state = {\r\n      user_id: match && match.params && match.params.id,\r\n      username: \"\",\r\n      precedent_pass: \"\",\r\n      new_pass: \"\",\r\n      conf_pass: \"\",\r\n      ready: false,\r\n      error: \"\",\r\n      button: true,\r\n      load: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n    this.setReady(false);\r\n    fetch(api(`users/${this.state.user_id}`), { method: \"GET\" }).then((res) => {\r\n      if (res.ok)\r\n        res.json().then((data) => {\r\n          if (data) {\r\n            this.setState({\r\n              username: data.user.username,\r\n              ready: true,\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  updatePass = () => {\r\n    const _new = this.state.new_pass;\r\n    const conf = this.state.conf_pass;\r\n    if (_new !== conf) {\r\n      this.setButton(true);\r\n      this.setError(\"Mot de passe non identique\");\r\n    } else {\r\n      this.setLoad(true);\r\n      const option = {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.precedent_pass,\r\n          new_pass: _new,\r\n        }),\r\n      };\r\n      fetch(api(\"users/updatePass\"), option).then((res) => {\r\n        if (res.ok) {\r\n          res.json().then((data) => {});\r\n          this.setLoad(false);\r\n          this.props.history.push(\"/Home\");\r\n        } else {\r\n          this.setLoad(false);\r\n          res.json().then((res) => {\r\n            console.log(res);\r\n            this.setState({\r\n              error: \"Ancien mot de passe incorrect\",\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { ready, precedent_pass, new_pass, conf_pass, error, load, button } =\r\n      this.state;\r\n    return (\r\n      <div className=\"bg-light min-vh-50 d-flex flex-row align-items-center\">\r\n        {!ready ? (\r\n          <>\r\n            <Loading></Loading>\r\n          </>\r\n        ) : (\r\n          <CContainer>\r\n            {\" \"}\r\n            <CRow className=\"justify-content-center\">\r\n              <CCol md={9} lg={9} xl={6}>\r\n                <CCard className=\"mx-4\">\r\n                  <CCardBody className=\"p-4\">\r\n                    <CForm\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                      }}\r\n                    >\r\n                      <h1>Modification mot de passe</h1>\r\n                      <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>Ancien mot de passe</CInputGroupText>\r\n                        <CFormInput\r\n                          type=\"password\"\r\n                          placeholder={precedent_pass}\r\n                          autoComplete=\"Ancien\"\r\n                          value={precedent_pass}\r\n                          onChange={this.setPrecedent}\r\n                        />\r\n                      </CInputGroup>\r\n                      <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>Nouveau</CInputGroupText>\r\n                        <CFormInput\r\n                          type=\"password\"\r\n                          placeholder={new_pass}\r\n                          autoComplete=\"Nouveau\"\r\n                          value={new_pass}\r\n                          onChange={this.setNew}\r\n                        />\r\n                      </CInputGroup>\r\n                      <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupText>Confirmation</CInputGroupText>\r\n                        <CFormInput\r\n                          type=\"password\"\r\n                          placeholder={conf_pass}\r\n                          autoComplete=\"Confirmation\"\r\n                          value={conf_pass}\r\n                          onChange={this.setConfirmation}\r\n                        />\r\n                      </CInputGroup>\r\n                      <div className=\"d-grid\">\r\n                        {load ? (\r\n                          <CButton\r\n                            id=\"aim-color-green\"\r\n                            className=\"px-4\"\r\n                            disabled\r\n                          >\r\n                            <Loading></Loading>\r\n                          </CButton>\r\n                        ) : (\r\n                          <CButton\r\n                            color=\"success\"\r\n                            type=\"submit\"\r\n                            onClick={() => this.updatePass()}\r\n                            disabled={button}\r\n                          >\r\n                            Modifier\r\n                          </CButton>\r\n                        )}\r\n                        <label>{error}</label>\r\n                      </div>\r\n                    </CForm>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            </CRow>\r\n          </CContainer>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  setLoad(l) {\r\n    this.setState({\r\n      load: l,\r\n    });\r\n  }\r\n  setReady(load) {\r\n    this.setState({\r\n      ready: load,\r\n    });\r\n  }\r\n\r\n  setError = (err) => {\r\n    this.setState({\r\n      error: err,\r\n    });\r\n  };\r\n  setButton = (b) => {\r\n    this.setState({\r\n      button: b,\r\n    });\r\n  };\r\n  setPrecedent = (e) => {\r\n    this.setState({\r\n      precedent_pass: e.target.value,\r\n    });\r\n  };\r\n  setNew = (e) => {\r\n    if (e.target.value.length <= 8) {\r\n      this.setError(\"Mot de passe trop court\");\r\n    } else {\r\n      this.setError(\"\");\r\n    }\r\n    this.setState({\r\n      new_pass: e.target.value,\r\n    });\r\n  };\r\n  setConfirmation = (e) => {\r\n    if (e.target.value !== this.state.new_pass) {\r\n      this.setError(\"Mot de passe non identique\");\r\n    } else {\r\n      this.setButton(false);\r\n      this.setError(\"\");\r\n    }\r\n    this.setState({\r\n      conf_pass: e.target.value,\r\n    });\r\n  };\r\n}\r\n"],"names":["api","link","process","Loading","React","UpdateUserPass","props","updatePass","_new","state","new_pass","conf_pass","setButton","setError","setLoad","option","headers","method","body","JSON","stringify","username","password","precedent_pass","fetch","then","res","ok","json","data","history","push","console","log","setState","error","err","b","button","setPrecedent","e","target","value","setNew","length","setConfirmation","match","user_id","params","id","ready","load","this","getUser","setReady","user","className","md","lg","xl","onSubmit","preventDefault","type","placeholder","autoComplete","onChange","disabled","color","onClick","l"],"sourceRoot":""}